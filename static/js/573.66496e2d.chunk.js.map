{"version":3,"file":"static/js/573.66496e2d.chunk.js","mappings":"uMAEaA,EAFeC,EAAQ,MAA5BC,QAE8BC,IAAV,4YAKM,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAA5B,IAML,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,YAAYE,OAA5B,I,wCCb1BC,EAGW,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,gBAAvB,E,SCMhBC,EAAW,WACtB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAMR,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYV,GAO5B,OALAW,EAAAA,EAAAA,YAAU,WACR,IAR6BC,EAQvBC,GARuBD,EAQgBP,GAP/BS,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,GAQrDT,GAASJ,EAAAA,EAAAA,IAAiBU,GAC3B,GAAE,CAACR,EAAcE,KAGhB,SAAChB,EAAD,UACGkB,GACCA,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAf,OACV,SAACC,EAAA,MAAD,CACEC,QAAS,CACPC,GAAI,GACJC,QAAS,GAEXC,SAAU,CAAEC,MAAM,GAClBC,WAAY,CAAEC,SAAU,GACxBC,YAAa,CACXN,EAAG,EACHC,QAAS,GATb,UAaE,SAAC,KAAD,CAAYM,GAAIZ,EAAKC,MAAOA,EAAOC,MAAOA,KAFrCF,EAZG,KAmBnB,ECxCD,EAJqB,WACnB,OAAO,SAACd,EAAD,GACR,C","sources":["components/Category/Category.styled.jsx","redux/recipes/recipe-select.js","components/Category/Category.jsx","pages/CategoryPage/CategoryPage.jsx"],"sourcesContent":["const { default: styled } = require('@emotion/styled');\n\nexport const OneCategoryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tablet}) {\n    flex-wrap: wrap;\n    gap: 32px;\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    display: grid; \n    grid-auto-columns: 1fr; \n    grid-template-columns: 1fr 1fr 1fr 1fr; \n    grid-template-rows: 1fr 1fr; \n    gap: 100px 14px; \n  }\n`;","export const recipeSelector = {\n    getCategoryList:state => state.recipeCommon.categoryList,\n    getIngredientList:state => state.recipe.ingredientList,\n    getRecipeByCategory:state => state.recipeCommon.recipeByCategory,\n    getRecipeMainPage:state => state.recipe.recipeMainPage,\n    getRecipeBySearch:state => state.recipe.recipeBySearch,\n    getRecipeById:state => state.recipe.recipeById,\n    getRecipeByIngredient:state => state.recipe.recipeByIngredient,\n    getFavoriteRecipes:state => state.recipe.favoriteRecipes,\n    getPopularRecipes:state => state.recipe.popularRecipes,\n    getIsloading:state => state.recipe.isLoading,\n}","import { useParams } from 'react-router-dom';\nimport { RecipeCard } from 'components/Common';\nimport { OneCategoryList } from './Category.styled';\nimport { motion } from 'framer-motion';\nimport { recipeByCategory } from 'redux/recipes/recipe-operation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { recipeSelector } from 'redux/recipes/recipe-select';\n\nexport const Category = () => {\n  const { categoryName } = useParams();\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const dispatch = useDispatch();\n  const recipes = useSelector(recipeSelector.getRecipeByCategory);\n\n  useEffect(() => {\n    const capitaliseName = capitalizeFirstLetter(categoryName);\n    dispatch(recipeByCategory(capitaliseName));\n  }, [categoryName, dispatch]);\n\n  return (\n    <OneCategoryList>\n      {recipes &&\n        recipes.map(({ _id, title, thumb }) => (\n          <motion.div\n            initial={{\n              y: -20,\n              opacity: 0,\n            }}\n            viewport={{ once: true }}\n            transition={{ duration: 1 }}\n            whileInView={{\n              y: 0,\n              opacity: 1,\n            }}\n            key={_id}\n          >\n            <RecipeCard id={_id} title={title} thumb={thumb} />\n          </motion.div>\n        ))}\n    </OneCategoryList>\n  );\n};","import { Category } from 'components/Category/Category';\n\nconst CategoryPage = () => {\n  return <Category />;\n};\n\nexport default CategoryPage;\n"],"names":["OneCategoryList","require","default","div","props","theme","breakpoints","tablet","desktop","recipeSelector","state","recipeCommon","recipeByCategory","Category","categoryName","useParams","dispatch","useDispatch","recipes","useSelector","useEffect","string","capitaliseName","charAt","toUpperCase","slice","map","_id","title","thumb","motion","initial","y","opacity","viewport","once","transition","duration","whileInView","id"],"sourceRoot":""}