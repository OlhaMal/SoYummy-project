{"version":3,"file":"static/js/879.d22e6a2b.chunk.js","mappings":"uJAAO,IAAMA,EAAc,WACzBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEb,C,uICHYC,EAAuBC,EAAAA,QAAAA,IAAH,qLAIV,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAA5B,IAGL,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,YAAYE,OAA5B,I,SCLfC,EAAc,SAAC,GAMrB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,eAEA,OACE,+BACE,SAACZ,EAAD,UACGW,GACC,SAAC,KAAD,KAEA,8BACGH,EAAKK,KAAI,SAAAC,GACR,OACE,SAAC,KAAD,CACEF,eAAgBA,EAChBG,OAAQL,EAERM,GAAIF,EAAUG,IAAIC,KAClBC,IAAKL,EAAUM,MACfC,MAAOP,EAAUO,MACjBC,YAAaR,EAAUQ,YACvBC,KAAMT,EAAUS,KAChBd,SAAUA,GANLK,EAAUG,IAAIC,KASxB,SAMZ,E,wCCpCYM,G,QAA2BvB,EAAAA,QAAAA,IAAH,iWAOZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,MAA5B,IAIL,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,YAAYE,OAA5B,KCKjBmB,EAAkB,WAC7B,OAA4CC,EAAAA,EAAAA,UAAS,GAArD,eAAOd,EAAP,KAAuBe,EAAvB,KACA,GAAmBD,EAAAA,EAAAA,UAAS,IAArBE,GAAP,eAEMpB,GAAOqB,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,EAAaC,KAAKC,MAAMJ,EAAQH,GAChCjB,GAAYkB,EAAAA,EAAAA,IAAYO,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAmB,CAAEC,KAAM7B,EAAgB8B,SAAUd,IAC/D,GAAE,CAACS,EAAUzB,EAAgBgB,IAO9B,OACE,SAACJ,EAAD,CAA0BR,GAAG,2BAA7B,UACO,OAAJR,QAAI,IAAJA,OAAA,EAAAA,EAAMmC,QAAS,GACd,iCACE,SAACpC,EAAD,CACEK,eAAgBA,EAChBF,aAAckC,EAAAA,GACdpC,KAAMA,EACNG,UAAWA,KAEb,SAAC,KAAD,CACEkC,kBAAkB,2BAClBC,YAAalC,EACbmC,UAAWd,EACXe,WAnBoB,SAAAC,IAC5BtD,EAAAA,EAAAA,KACAgC,EAAkBsB,EACnB,QAoBK,4BACE,gBACEC,IAAKC,EACLC,IAAI,WAGN,uBAAG,mBAGH,uBAAI,6CAOb,E,oBChDD,EAjBqB,WAInB,OAHAb,EAAAA,EAAAA,YAAU,YACR5C,EAAAA,EAAAA,IACD,GAAE,KAED,iCACE,SAAC,KAAD,WACE,2BAAO,oBAET,SAAC0D,EAAA,EAAD,CACEC,KAAM,eAER,SAAC7B,EAAD,MAGL,C,wGCrBM,IAAMK,EAAmB,SAAAyB,GAAK,OAAIA,EAAMC,gBAAgBC,KAA1B,EACxBzB,EAAwB,SAAAuB,GAAK,OAAIA,EAAMC,gBAAgBE,UAA1B,EAC7BtB,EAAqB,SAAAmB,GAAK,OAAIA,EAAMC,gBAAgB7C,SAA1B,C","sources":["components/utils/scrollToTop.js","components/RecipesList/RecipesList.styled.jsx","components/RecipesList/RecipesList.jsx","components/FavoriteRecipes/FavoriteRecipes.styled.jsx","components/FavoriteRecipes/FavoriteRecipes.jsx","pages/FavoritePage/FavoritePage.jsx","redux/favoriteRecipes/favoriteRecipesSelectors.js"],"sourcesContent":["export const scrollToTop = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const RecipesListContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\n    gap: 18px;\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    gap: 40px;\n  }\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    gap: 50px;\n  }\n`;","import { Loader } from 'components/Common';\nimport { RecipeItem } from '../Common';\nimport { RecipesListContainer } from './RecipesList.styled'\n\nexport const RecipesList = ({\n  data,\n  cssClass,\n  removeRecipe,\n  isLoading,\n  paginationPage,\n}) => {\n  return (\n    <>\n      <RecipesListContainer>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {data.map(itemProps => {\n              return (\n                <RecipeItem\n                  paginationPage={paginationPage}\n                  remove={removeRecipe}\n                  key={itemProps._id.$oid}\n                  id={itemProps._id.$oid}\n                  img={itemProps.thumb}\n                  title={itemProps.title}\n                  description={itemProps.description}\n                  time={itemProps.time}\n                  cssClass={cssClass}\n                ></RecipeItem>\n              );\n            })}\n          </>\n        )}\n      </RecipesListContainer>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FavoriteRecipesContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 43px;\n    gap: 18px;\n    \n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n        gap: 40px;\n        padding-top: 97px;\n        }\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n        gap: 50px;\n        padding-top: 93px;\n        margin-bottom: -100px;\n    }\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RecipesList } from 'components/RecipesList/RecipesList';\nimport { getFavoriteRecipes } from 'redux/favoriteRecipes/favoriteRecipesOperations';\nimport { removeFromFavorite } from 'redux/favoriteRecipes/favoriteRecipesOperations';\nimport {\n  selectFavRecipes,\n  selectFavIsLoading,\n  selectFavRecipesCount\n} from 'redux/favoriteRecipes/favoriteRecipesSelectors';\nimport placeholder from '../../images/placeholder.png';\nimport { scrollToTop } from '../utils/scrollToTop';\nimport 'react-responsive-pagination/themes/minimal.css';\nimport { FavoriteRecipesContainer } from './FavoriteRecipes.styled';\n\nimport { Paginator } from 'components/Common'\n\nexport const FavoriteRecipes = () => {\n  const [paginationPage, setPaginationPage] = useState(1);\n  const [per_page] = useState(10);\n\n  const data = useSelector(selectFavRecipes);\n  const total = useSelector(selectFavRecipesCount);\n  const pagesCount = Math.trunc(total / per_page);\n  const isLoading = useSelector(selectFavIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getFavoriteRecipes({ page: paginationPage, pageSize: per_page }));\n  }, [dispatch, paginationPage, per_page]);\n\n  const handlePaginationClick = event => {\n    scrollToTop();\n    setPaginationPage(event);\n  };\n\n  return (\n    <FavoriteRecipesContainer id=\"favoriteRecipesContainer\">\n      {data?.length > 0 ? (\n        <>\n          <RecipesList\n            paginationPage={paginationPage}\n            removeRecipe={removeFromFavorite}\n            data={data}\n            isLoading={isLoading}\n          />\n          <Paginator\n            parendContainerId=\"favoriteRecipesContainer\"\n            currentPage={paginationPage}\n            pagesCout={pagesCount}\n            onPaginate={handlePaginationClick}>\n          </Paginator>\n        </>\n      ) : (\n        <div >\n          <img\n            src={placeholder}\n            alt=\"error\"\n\n          />\n          <p>\n            We are sorry,\n          </p>\n          <p >\n            You don't have any added recipes ...\n          </p>\n        </div>\n      )}\n    </FavoriteRecipesContainer>\n  );\n};\n","import { FavoriteRecipes } from 'components/FavoriteRecipes/FavoriteRecipes';\nimport { Helmet } from 'react-helmet-async';\nimport { useEffect } from 'react';\nimport { scrollToTop } from 'components/utils/scrollToTop';\nimport PageTitleSection from 'components/PageTitleSection/PageTitleSection'\n\nconst FavoritePage = () => {\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>My favorites</title>\n      </Helmet>\n      <PageTitleSection\n        text={'Favorites'}\n      />\n      <FavoriteRecipes />\n    </>\n  );\n};\n\nexport default FavoritePage;\n","export const selectFavRecipes = state => state.favoriteRecipes.items;\nexport const selectFavRecipesCount = state => state.favoriteRecipes.totalCount;\nexport const selectFavIsLoading = state => state.favoriteRecipes.isLoading;\nexport const selectFavError = state => state.favoriteRecipes.error;\n"],"names":["scrollToTop","window","scrollTo","top","behavior","RecipesListContainer","styled","props","theme","breakpoints","tablet","desktop","RecipesList","data","cssClass","removeRecipe","isLoading","paginationPage","map","itemProps","remove","id","_id","$oid","img","thumb","title","description","time","FavoriteRecipesContainer","FavoriteRecipes","useState","setPaginationPage","per_page","useSelector","selectFavRecipes","total","selectFavRecipesCount","pagesCount","Math","trunc","selectFavIsLoading","dispatch","useDispatch","useEffect","getFavoriteRecipes","page","pageSize","length","removeFromFavorite","parendContainerId","currentPage","pagesCout","onPaginate","event","src","placeholder","alt","PageTitleSection","text","state","favoriteRecipes","items","totalCount"],"sourceRoot":""}